- implement actual aod team selection
- interaction for setting up who can do what roles at aod.
	- this will let us avoid needing to add roles to control who can do what.

- experiment with not needing the interaction service before going too far with it.
	- button builder idea
	- an action could only be used for a single command (would be fine for my use, but if we want to make a lib then maybe not.)

- update interaction service to save to file. auto delete messages older than n days.
- update action context to also store interactions when pming people.
- split other config commands into subcommands
- list subcommands in action/subcommand attribute
- add view all config settings subcommand

- use dependency injection to inject services for commands
- test multiple people hitting buttons at once
- harden guild.GetUser against users no longer in the discord

- boss embed color
- notifying people trying to sign up without having read rules
- regular sign ups for aod/raids/rago?
- combined raids signup
- deploy script so we can have a release instance running while we can run a separate test instance.
	- this should also deploy the release token

- winston picture command

Done:
- role requirements for commands
